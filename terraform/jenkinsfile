pipeline {
  agent any
  tools { terraform 'terraform' }

  parameters {
    choice(name: 'action', choices: ['apply', 'destroy'], description: 'Terraform action to perform')
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Terraform Operations') {
      steps {        
        sh '''
          terraform init
          terraform fmt --recursive
          terraform validate
          terraform plan -out=tfplan
          terraform show -no-color tfplan > plan.txt
        '''
      }
      archiveArtifacts artifacts: "plan.txt", fingerprint: true
    }

    stage('Terraform Apply or Destroy') {
      steps {        
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-creds']]) {
          script {
            if (params.action == 'apply') {
              echo "Running Terraform apply..."
              sh "terraform apply -auto-approve"
            } else if (params.action == 'destroy') {
              echo "Running Terraform destroy..."
              sh "terraform destroy -auto-approve"
            }
          }
        }
      }
    }

    stage('Trigger Kops Cluster Setup') {
      when {
        expression { params.action == 'apply' }
      }
      steps {
        script {
          echo "Infrastructure ready. Triggering Kops cluster pipeline..."
          build job: 'kops-cluster-pipeline', wait: true, parameters: [
            string(name: 'ACTION', value: 'create')
          ]
        }
      }
    }
  }
}
